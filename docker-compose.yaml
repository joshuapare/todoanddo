version: "3.9"

volumes:
  redis:
    driver: local
  pg-db:
    driver: local
  mysql-db:
    driver: local
  mongo-db:
    driver: local

services:
  web:
    build:
      context: ./web
      target: dev
    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public
      - ./web/pages:/app/pages
      - ./web/middleware.ts:/app/middleware.ts
    ports:
      - "3330:3000"
      
  api-gateway:
    build:
      context: ./api-gateway
      target: dev
    volumes:
      - ./api-gateway/src:/app/src
      - ./api-gateway/public:/app/public
      - ./api-gateway/proto:/app/proto
    ports:
      - "3456:3000"

  user-svc:
    build:
      context: ./user-svc
      target: dev
    volumes:
      - ./user-svc/src:/app/src
      - ./user-svc/public:/app/public
      - ./user-svc/proto:/app/proto
    ports:
      - "3331:3000"
      - "5001:5000"

  auth-svc:
    build:
      context: ./auth-svc
      target: dev
    volumes:
      - ./auth-svc:/app
    env_file:
      - ./auth-svc/.env
    ports:
      - "3332:5000"

  events-svc:
    build:
      context: ./events-svc
      target: dev
    volumes:
      - ./events-svc/src:/app/src
      - ./events-svc/public:/app/public
    ports:
      - "3333:3000"

  todo-svc:
    build:
      context: ./todo-svc
      target: dev
    volumes:
      - ./todo-svc/src:/app/src
      - ./todo-svc/public:/app/public
    ports:
      - "3334:3000"

  quote-svc:
    build:
      context: ./quote-svc
      target: dev
    volumes:
      - ./todo-svc/src:/app/src
      - ./todo-svc/tests:/app/tests
    ports:
      - "3335:3000"

# DATABASES
  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '13306:3306'
    volumes:
      - mysql-db:/var/lib/mysql

  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '15432:5432'
    volumes: 
      - pg-db:/var/lib/postgresql/data

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '16379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - redis:/data

  mongo:
    image: mongo:6.0.2
    ports:
      - "27717:27017"
    volumes:
      - mongo-db:/data/db
    command: --quiet --logpath /dev/null
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

# Communication (Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
      
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1